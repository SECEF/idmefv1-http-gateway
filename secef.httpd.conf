<IfModule !mod_proxy_fcgi.c>
LoadModule proxy_fcgi_module modules/mod_proxy_fcgi.so
</IfModule>

<IfModule !mod_version.c>
LoadModule version_module modules/mod_version.so
</IfModule>

Listen 3128

# Désactiver le cache de session et les tickets
SSLSessionCache           nonenotnull
SSLSessionTickets         off

# Activer l'agraphage OCSP
SSLUseStapling            on
SSLStaplingCache          shmcb:logs/ssl_stapling(32768)

<IfVersion >= 2.4.8>
    # Utiliser les courbes recommandées pour ECDHE et supported_groups
    SSLOpenSSLConfCmd ECDHParameters secp521r1:secp384r1:prime256v1:brainpoolP512r1:brainpoolP384r1:brainpoolP256r1SSLOpenSSLConfCmd Curves secp521r1:secp384r1:prime256v1:brainpoolP512r1:brainpoolP384r1:brainpoolP256r1

    # Utiliser un groupe de taille 2048 pour DH, généré par OpenSSL avec
    # openssl dhparam 2048 > /chemin/vers/fichier/dhparams.pem
    SSLOpenSSLConfCmd DHParameters "/etc/pki/tls/certs/dhparams.pem"
</IfVersion>

<VirtualHost _default_:3128>
    ProxyPass "/" "unix:/var/run/httpd/secef/secef.sock|fcgi://localhost/"

    # Activer l'usage du protocole TLS
    SSLEngine                 off

    # Forcer l'usage de TLS1.2
    SSLProtocol               all -SSLv2 -SSLv3 -TLSv1 -TLSv1.1

    # Fournir une chaîne de certification et une clé
    SSLCertificateKeyFile     "/etc/pki/tls/private/localhost.key"
    SSLCertificateFile        "/etc/pki/tls/certs/localhost.crt"
    SSLCertificateChainFile   "/etc/pki/ca-trust/source/anchors/CA.crt"

    # Active la vérification OCSP : à utiliser si supporté par l'IGC
    #SSLOCSPEnable             on

    # Impose au client de présenter un certificat valide
    SSLVerifyClient           require
    SSLOptions                +StrictRequire

    # Trace le nom distingué du certificat client utilisé dans les journaux
    SSLUserName               SSL_CLIENT_S_DN

    # Autorités de confiance pour les certificats clients
    # et profondeur de la validation
    SSLCACertificateFile      "/etc/pki/ca-trust/source/anchors/CA.crt"
    SSLVerifyDepth            5

    # Désactiver la compression
    SSLCompression            off

    # Désactiver les renégociations non sécurisées
    SSLInsecureRenegotiation  off

    SSLHonorCipherOrder       on
    # La branche 1.0.2 de OpenSSL :
    # - ne prend pas en charge les suites CCM ;
    # - ne prend pas en charge ARIA ;
    # - prend en charge CAMELLIA (en revision `h'), mais uniquement combiné avec
    #  SHA-1. L'implémentation de SHA256 avec CAMELLIA128 est anticipée.
    # Relations d'ordre utilisées :
    # - ECDHE > DHE > chiffrement RSA ;
    # - GCM > CBC ;
    # - AES256 > AES128 > CAMELLIA256 > CAMELLIA128 ;
    # - SHA384 > SHA256 ;
    # - ECDSA > RSA.
    #
    # Avec le support actuel et futur prévu, en branche 1.0.2:
    SSLCipherSuite    ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-CAMELLIA256-SHA384:ECDHE-RSA-CAMELLIA256-SHA384:ECDHE-ECDSA-CAMELLIA128-SHA256:ECDHE-RSA-CAMELLIA128-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:CAMELLIA128-SHA256
</VirtualHost>
